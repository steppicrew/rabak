
#
# Annotated rabak sample configuration file
# -----------------------------------------

# These configuration values are common to all samples:

switch.verbose = 1
switch.logging = 1


###################################
#  Sample 12: Variables in depth  #
###################################

# Variables are defined in a simple 'key=value' manner. E.g., the code

server1= lisa

# assigns the string 'lisa' to the variable 'server1'.

# Variables can be clustered in objects simply by adding a name and a
# dot in front of a variable name. Examples:

mount1.title= My Mount Point
mount1.path= /mnt/data

lisa.title= Server "Lisa"
lisa.mount_data.title= One of Lisa's Mount Points
lisa.mount_data.path= /mnt/data

# Here, 'mount1' and 'lisa.mount1' are objects that contain simple variables.
# 'lisa' is an object containing a variable 'title' and an object 'mount_data'.

# There are two ways in using a variable: substitution or binding.
# Here are examples for substitution:

mount2= $mount1
mount2.title= Copy of the "mount1" Mount Point

bart.title= Server "Bart"
bart.mount_data= $lisa.mount_data
bart.mount_data.title= Now it's Bart's Mount Point

# The b<$>-Sign followed by a variable name is substituted by the value of that
# variable.
# The above assignments will result in the following values:

mount2.title= Copy of the "mount1" Mount Point
mount2.path= /mnt/data

bart.title= Server "Bart"
bart.mount_data.title= Now it's Bart's Mount Point
bart.mount_data.path= /mnt/data

# Binding: TBD

# Variables ar
b.x = 1
b.y = 2
a = &b
a.z= 3

c = $b
c.z= 3

# TBD!

#
# EOF
# ---
# 
#
# Further information
# -------------------
# 
# For more documentation, try 'rabak doc'.
# 
# To find out how b<rabak> sees this file, type '../rabak -c rabak.sample12.cf conf'.
# 
# (This file was generated by RabakLib::Doc::Tutorial.
# Changes to this file are useless.
# To read the whole tutorial in one file, type 'rabak tutorial'.)
# 
# 
